!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
BALL_COLLISIONS	keyboard.h	/^	BALL_COLLISIONS = 0,$/;"	e	enum:demo_mode
BALL_DIAMETER	physics.h	8;"	d
BALL_RADIUS	physics.h	7;"	d
Ball	physics.h	/^struct Ball {	$/;"	s
Draw	draw.h	/^struct Draw {$/;"	s
FRAMERATE	physics.h	4;"	d
INCLUDE	Makefile	/^INCLUDE= $/;"	m
MAX_BALLS	physics.h	5;"	d
PENDULUM	keyboard.h	/^	PENDULUM$/;"	e	enum:demo_mode
PHYSICS_H	physics.h	2;"	d
Pendulum	physics.h	/^struct Pendulum {$/;"	s
SCREEN_HEIGHT	draw.h	3;"	d
SCREEN_HEIGHT	window.h	5;"	d
SCREEN_WIDTH	window.h	4;"	d
SPRING	keyboard.h	/^	SPRING,$/;"	e	enum:demo_mode
SRC	Makefile	/^SRC= cairoCannon.c keyboard.c window.c draw.c physics.c$/;"	m
STARTING_BALL_COUNT	physics.h	6;"	d
Spring	physics.h	/^struct Spring {$/;"	s
Window	window.h	/^struct Window {$/;"	s
accel	physics.h	/^	float accel;$/;"	m	struct:Pendulum
angle	physics.h	/^	double angle; $/;"	m	struct:Ball
angle	physics.h	/^    float angle;  \/\/ RADIANS$/;"	m	struct:Pendulum
angle	physics.h	/^    float angle;  \/\/ RADIANS$/;"	m	struct:Spring
b	physics.h	/^	float b;$/;"	m	struct:Ball
ba	physics.c	/^struct ballArray *ba;$/;"	v	typeref:struct:ballArray
ball	physics.h	/^	struct Ball ball[MAX_BALLS];$/;"	m	struct:ballArray	typeref:struct:ballArray::Ball
ballArray	physics.h	/^struct ballArray {$/;"	s
colours	physics.c	/^int colours[10][3] = {  {255,  0,255} ,  \/\/ magenta$/;"	v
count	physics.h	/^	int count;$/;"	m	struct:ballArray
cr	draw.h	/^	cairo_t *cr;$/;"	m	struct:Draw
demo_mode	keyboard.c	/^int demo_mode = 0;$/;"	v
demo_mode	keyboard.h	/^enum demo_mode {$/;"	g
display	window.h	/^    Display *display;$/;"	m	struct:Window
drawScene	cairoCannon.c	/^void drawScene(cairo_t *cr, struct ballArray *ba, struct Spring *sp, struct Pendulum *pd)$/;"	f
draw_init	draw.c	/^cairo_t *draw_init(cairo_surface_t *surface){$/;"	f
event	window.h	/^    XEvent event;$/;"	m	struct:Window
exit_flag	cairoCannon.c	/^int exit_flag = 0;$/;"	v
frame_duration	physics.c	/^const int frame_duration = 1000000 \/ FRAMERATE;$/;"	v
g	physics.h	/^	float g;$/;"	m	struct:Ball
gravity	physics.c	/^double gravity = -9.81 \/ FRAMERATE;$/;"	v
i	physics.c	/^int i, j;$/;"	v
initialVelocity	physics.c	/^double initialVelocity;$/;"	v
j	physics.c	/^int i, j;$/;"	v
k	physics.h	/^    float k;      \/\/ spring constant k$/;"	m	struct:Spring
keyboard_get_demo_mode	keyboard.c	/^int keyboard_get_demo_mode(){$/;"	f
length	physics.h	/^    float length;$/;"	m	struct:Pendulum
length	physics.h	/^    float length;$/;"	m	struct:Spring
m	physics.h	/^    int m;$/;"	m	struct:Ball
main	cairoCannon.c	/^int main() $/;"	f
pd	physics.c	/^struct Pendulum *pd;$/;"	v	typeref:struct:Pendulum
physics_add_ball	physics.c	/^void physics_add_ball()$/;"	f
physics_change_demo_mode	physics.c	/^void physics_change_demo_mode(int mode){$/;"	f
physics_cleanup	physics.c	/^void physics_cleanup(struct ballArray *ba, struct Pendulum *pd, struct Spring *sp){$/;"	f
physics_init_ball_array	physics.c	/^struct ballArray *physics_init_ball_array()$/;"	f
physics_init_pendulum	physics.c	/^struct Pendulum *physics_init_pendulum() {$/;"	f
physics_init_spring	physics.c	/^struct Spring *physics_init_spring() {$/;"	f
physics_move_ball_down	physics.c	/^void physics_move_ball_down(){$/;"	f
physics_move_ball_left	physics.c	/^void physics_move_ball_left(){$/;"	f
physics_move_ball_right	physics.c	/^void physics_move_ball_right(){$/;"	f
physics_move_ball_up	physics.c	/^void physics_move_ball_up(){$/;"	f
physics_remove_ball	physics.c	/^void physics_remove_ball()$/;"	f
physics_update	physics.c	/^void physics_update()$/;"	f
poll_x_event	keyboard.c	/^void poll_x_event(XEvent event) $/;"	f
r	physics.h	/^	float r;$/;"	m	struct:Ball
root	window.h	/^    Window root;$/;"	m	struct:Window
screen	window.h	/^    int screen;$/;"	m	struct:Window
size	physics.h	/^	int size;$/;"	m	struct:ballArray
sp	physics.c	/^struct Spring *sp;$/;"	v	typeref:struct:Spring
surface	draw.h	/^	cairo_surface_t *surface;$/;"	m	struct:Draw
surface	window.h	/^	cairo_surface_t *surface;$/;"	m	struct:Window
swap_ball	physics.c	/^void swap_ball(struct Ball *ball1, struct Ball *ball2)$/;"	f
vel	physics.h	/^	float vel;$/;"	m	struct:Pendulum
vx	physics.h	/^	double vx;$/;"	m	struct:Ball
vy	physics.h	/^	double vy;$/;"	m	struct:Ball
window	window.h	/^    Window window;$/;"	m	struct:Window
window_init	window.c	/^struct Window *window_init(){$/;"	f
x	physics.h	/^	volatile float x;$/;"	m	struct:Ball
x_1	physics.h	/^    float x_1;$/;"	m	struct:Pendulum
x_1	physics.h	/^    float x_1;$/;"	m	struct:Spring
x_2	physics.h	/^    float x_2;$/;"	m	struct:Pendulum
x_2	physics.h	/^    float x_2;$/;"	m	struct:Spring
y	physics.h	/^	volatile float y;$/;"	m	struct:Ball
y_1	physics.h	/^    float y_1;$/;"	m	struct:Pendulum
y_1	physics.h	/^    float y_1;$/;"	m	struct:Spring
y_2	physics.h	/^    float y_2;$/;"	m	struct:Pendulum
y_2	physics.h	/^    float y_2;$/;"	m	struct:Spring
